#!/bin/sh /etc/rc.common
# Copyright (C) 2024 David Bauer <mail@david-bauer.net>

START=99
USE_PROCD=1

NAME=wireless-rate-limiter
PROG=/usr/bin/wireless-rate-limiter

. /usr/share/libubox/jshn.sh
. /lib/functions.sh

config_apply_core() {
	local cfg="$1"

	# Nothing yet
}

config_apply_client() {
	local cfg="$1"

	config_get val "$cfg"		disabled
	[ "$val" -gt "0" ] && return

	json_init
	config_get val	"$cfg" 		interface
	json_add_string	"interface"	"$val"
	config_get val	"$cfg" 		download
	json_add_int	"down"		"$val"
	config_get val	"$cfg" 		upload
	json_add_int	"up"		"$val"

	ubus call wireless-rate-limiter set_client_config "$(json_dump)"
}

config_apply_interface() {
	local cfg="$1"

	config_get val "$cfg"		disabled
	[ "$val" -gt "0" ] && return

	json_init
	config_get val	"$cfg" 		interface
	json_add_string	"interface"	"$val"
	config_get val	"$cfg" 		download
	json_add_int	"down"		"$val"
	config_get val	"$cfg" 		upload
	json_add_int	"up"		"$val"

	ubus call wireless-rate-limiter set_interface_config "$(json_dump)"
}

config_apply() {
	config_load wireless-rate-limiter
	config_foreach config_apply_core core
	config_foreach config_apply_client client
	config_foreach config_apply_interface interface
}

load_config() {
	ubus -t 10 wait_for wireless-rate-limiter
	sleep 1
	ubus call wireless-rate-limiter clear_config

	config_apply
}

reload_service() {
	start
	load_config
}

service_triggers() {
	procd_add_reload_trigger wireless-rate-limiter
}

service_started() {
	load_config
}

stop_service() {
	ubus call wireless-rate-limiter clear_config
	sleep 2
}

start_service() {
	DISABLED="$(uci -q get wireless-rate-limiter.core.disabled)"
	DISABLED="${DISABLED:-0}"

	[ "$DISABLED" -gt 0 ] && return

	procd_open_instance
	procd_set_param command "$PROG"
	# procd_set_param limits core="unlimited" 
	procd_close_instance
}
